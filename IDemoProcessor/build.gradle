plugins {
    id 'java-library'
    id 'kotlin'// 支持识别kotlin类
    id 'kotlin-kapt'
    id 'org.jetbrains.kotlin.jvm' // 支持识别kotlin类
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(JavaCompile){
    options.encoding='utf8'
}

//jar {
//    // 将所有依赖打包进jar里
//    // This line of code recursively collects and copies all of a project's files
//    // and adds them to the JAR itself. One can extend this task, to skip certain
//    // files or particular types at will
//    from {
//        configurations.compileClasspath.collect {
//            it.isDirectory() ? it : zipTree(it)
//        }
//    }
//}

repositories {
    flatDir {
        dirs 'libs','IDemoGenerator/libs'
    }
}

dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'cc.ives.idemo:annotation:1.0.0'

    compileOnly files(org.gradle.internal.jvm.Jvm.current().getToolsJar())

    // javapoet
    implementation 'com.squareup:javapoet:1.13.0'
    // javassit
    implementation 'org.javassist:javassist:3.24.0-GA'

    implementation 'com.google.auto.service:auto-service:1.0-rc7'
    annotationProcessor 'com.google.auto.service:auto-service:1.0-rc7'//（必须要加上这行代码，否则无法注册成功）

//    // 支持识别kotlin类
    kapt 'com.google.auto.service:auto-service:1.0-rc7'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.72"//1.3.70-eap-42
}
repositories {
    mavenLocal()
    maven {
//        def repoURL = "file:///" + rootDir + "/idemo-annotation/pkg/"
//        url repoURL
        url uri(rootDir.getAbsolutePath() + File.separator + 'idemo-annotation' + File.separator + 'pkg')
    }
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    mavenCentral()
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}